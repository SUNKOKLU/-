{\rtf1\ansi\ansicpg950\cocoartf1671
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\fmodern\fcharset0 CourierNewPSMT;\f2\fnil\fcharset136 STSongti-TC-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\info
{\title Import Settings:}
{\author Katie Habib}
{\*\company John Wiley and Sons, Inc.}}\margl1440\margr1440\vieww22660\viewh15160\viewkind1
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\ri0\partightenfactor0

\f0\fs24 \cf0 Import Settings: \
Base Settings: Brownstone Default\
Highest Answer Letter: D\
Multiple Keywords in Same Paragraph: No\
\
\
\pard\pardeftab720\ri0\partightenfactor0
\cf0 \
Chapter: Chapter 6\
\
\
\
Multiple Choice\
\
\
\
1.  A race condition ____.\
A)  results when several threads try to access the same data concurrently\
B)  results when several threads try to access and modify the same data concurrently\
C)  will result only if the outcome of execution does not depend on the order in which instructions are executed\
D)  None of the above\
\
Ans:  B\
Feedback: 6.2\
Difficulty: Medium\
\
\
\
2.  An instruction that executes atomically ____.\
A)  must consist of only one machine instruction\
B)  executes as a single, uninterruptible unit\
C)  cannot be used to solve the critical section problem\
D)  All of the above\
\
Ans:  B\
Feedback: 6.4\
Difficulty: Medium\
\
\
\
3.  A counting semaphore ____.\
A)  is essentially an integer variable\
B)  is accessed through only one standard operation\
C)  can be modified simultaneously by multiple threads\
D)  cannot be used to control access to a thread's critical sections\
\
Ans:  A\
Feedback: 6.6.1\
Difficulty: Medium\
\
\
\
4.  A mutex lock ____.\
A)  is exactly like a counting semaphore\
B)  is essentially a boolean variable\
C)  is not guaranteed to be atomic\
D) can be used to eliminate busy waiting\
\
Ans:  B\
Feedback:  6.5\
Difficulty: Difficult\
\
\
\
5.  In Peterson's solution, the ____ variable indicates if a process is ready to enter its critical section.\
A)  
\f1 turn
\f0 \
B)  
\f1 lock
\f0 \
C)  
\f1 flag[i]
\f0 \
D)  
\f1 turn[i]
\f0 \
\
Ans:  C\
Feedback: 6.3\
Difficulty: Easy\
\
\
\
6.  The first readers-writers problem ____.\
A)  requires that, once a writer is ready, that writer performs its write as soon as possible.\
B)  is not used to test synchronization primitives.\
C)  requires that no reader will be kept waiting unless a writer has already obtained permission to use the shared database.\
D)  requires that no reader will be kept waiting unless a reader has already obtained permission to use the shared database.\
\
Ans:  C\
Feedback: 6.7.2\
Difficulty: Medium\
\
\
\
7.  A ___ type presents a set of programmer-defined operations that are provided mutual exclusion within it.\
A)  transaction\
B)  signal\
C)  binary\
D)  monitor\
\
Ans:  D\
Feedback: 6.8\
Difficulty: Easy\
\
\
\
8.  ____________ occurs when a higher-priority process needs to access a data structure that is currently being accessed by a lower-priority process.\
A)  Priority inversion\
B)  Deadlock\
C)  A race condition\
D)  A critical section\
\
Ans:  A\
Feedback: 6.6.4\
Difficulty: Medium\
\
\
\
9.  What is the correct order of operations for protecting a critical section using mutex locks? \
A) 
\f1 release()
\f0  followed by 
\f1 acquire()
\f0 \
B) 
\f1 acquire()
\f0  followed by 
\f1 release()
\f0 \
C) 
\f1 wait()
\f0  followed by 
\f1 signal()
\f0 \
D) 
\f1 signal()
\f0  followed by 
\f1 wait()
\f0  \
\
Ans:  B\
Feedback: 6.5\
Difficulty: Easy\
\
\
\
10.  What is the correct order of operations for protecting a critical section using a binary semaphore?\
A) 
\f1 release()
\f0  followed by 
\f1 acquire()
\f0 \
B) 
\f1 acquire()
\f0  followed by 
\f1 release()
\f0 \
C) 
\f1 wait()
\f0  followed by 
\f1 signal()
\f0 \
D) 
\f1 signal()
\f0  followed by 
\f1 wait()
\f0  \
\
Ans:  C\
Feedback: 6.6\
Difficulty: Easy\
\
\
\
11. _____ is not a technique for handling critical sections in operating systems.\
A) Nonpreemptive kernels\
B) Preemptive kernels\
C) Spinlocks\
D) Peterson's solution\
\
Ans: D\
Feedback: 6.3\
Difficulty: Medium\
\
\
\
12. A solution to the critical section problem does not have to satisfy which of the following requirements?\
A) mutual exclusion\
B) progress\
C) atomicity\
D) bounded waiting\
\
Ans: C\
Feedback: 6.2\
Difficulty: Medium\
\
\
\
13. A(n) _______ refers to where a process is accessing/updating shared data.\
A) critical section\
B) entry section\
C) mutex\
D) test-and-set\
\
Ans: A\
Feedback: 6.2\
Difficulty: Medium\
\
\
\
14. _____ can be used to prevent busy waiting when implementing a semaphore.\
A) Spinlocks\
B) Waiting queues\
C) Mutex lock\
D) Allowing the 
\f1 wait
\fs20 ()
\f0\fs24  operation to succeed\
\
Ans: B\
Feedback: 6.6.\
Difficulty: Easy\
\
\
\
15. Assume an adaptive mutex is used for accessing shared data on a Solaris system with multiprocessing capabilities. Which of the following statements is not true?\
A) A waiting thread may spin while waiting for the lock to become available.\
B) A waiting thread may sleep while waiting for the lock to become available.\
C) The adaptive mutex is only used to protect short segments of code.\
D) Condition variables and semaphores are never used in place of an adaptive mutex.\
\
Ans: D\
Feedback: 6.9.3\
Difficulty: Medium\
\
\
\
16. What is the purpose of the mutex semaphore in the implementation of the bounded-buffer problem using semaphores? \
A) It indicates the number of empty slots in the buffer.\
B) It indicates the number of occupied slots in the buffer.\
C) It controls access to the shared buffer.\
D) It ensures mutual exclusion.\
\
Ans: D\
Feedback: 6.7.1\
Difficulty: Medium\
\
\
\
17. How many philosophers may eat simultaneously in the Dining Philosophers problem with 5 philosophers?\
A) 1\
B) 2\
C) 3\
D) 5\
\
Ans: B\
Feedback: 6.7.3\
Difficulty: Medium\
\
\
\
18. Which of the following statements is true?\
A) A counting semaphore can never be used as a binary semaphore.\
B) A binary semaphore can never be used as a counting semaphore.\
C) Spinlocks can be used to prevent busy waiting in the implementation of semaphore.\
D) Counting semaphores can be used to control access to a resource with a finite number of instances.\
\
Ans: C\
Feedback:  6.6\
Difficulty: Medium\
\
\
\
19. _____ is/are not a technique for managing critical sections in operating systems.\
A) Peterson's solution\
B) Preemptive kernel\
C) Nonpreemptive kernel\
D) Semaphores\
\
Ans: A\
Feedback: 6.3\
Difficulty: Medium\
\
\
\
20. When using semaphores, a process invokes the 
\f1 wait()
\f0  operation before accessing its critical section, followed by the 
\f1 signal()
\f0  operation upon completion of its critical section. Consider reversing the order of these two operations\'97first calling 
\f1 signal()
\f0 , then calling 
\f1 wait()
\f0 . What would be a possible outcome of this?\
A) Starvation is possible.\
B) Several processes could be active in their critical sections at the same time.\
C) Mutual exclusion is still assured.\
D) Deadlock is possible.\
\
Ans: B\
Feedback: 6.7\
Difficulty: Difficult \
\
\
\
21. Which of the following statements is true?\
A) Operations on atomic integers do not require locking.\
B) Operations on atomic integers do require additional locking.\
C) Linux only provides the 
\f1 atomic_inc()
\f0  and 
\f1 atomic_sub()
\f0  operations.\
D) Operations on atomic integers can be interrupted.\
\
Ans: A\
Feedback: 6.9.2\
Difficulty: Medium\
\
\
\
22. A(n) ___________ is a sequence of read-write operations that are atomic.\
A) atomic integer\
B) semaphore\
C) memory transaction\
D) mutex lock\
\
Ans: C\
Feedback: 6.10.1\
Difficulty: Medium\
\
\
\
23. The OpenMP 
\f1 #pragma omp critical
\f0  directive ___________.\
A) behaves much like a mutex lock\
B) does not require programmers to identify critical sections\
C) does not guarantee prevention of race conditions\
D) is similar to functional languages \
\
Ans: A\
Feedback: 6.10.2\
Difficulty: Medium\
\
\
\
24. Another problem related to deadlocks is ____________.\
A) race conditions\
B) critical sections\
C) spinlocks\
D) indefinite blocking\
\
Ans: D\
Feedback: 6.6.3\
Difficulty: Medium\
\
\
\
\
Essay\
\
\
\
25.  What three conditions must be satisfied in order to solve the critical section problem?\
\
Ans:  In a solution to the critical section problem, no thread may be executing in its critical section if a thread is currently executing in its critical section. Furthermore, only those threads that are not executing in their critical sections can participate in the decision on which process will enter its critical section next. Finally, a bound must exist on the number of times that other threads are allowed to enter their critical state after a thread has made a request to enter its critical state.\
Feedback: 6.2\
Difficulty: Medium\
\
\
\
26.  Explain two general approaches to handle critical sections in operating systems.\
\
Ans:  Critical sections may use preemptive or nonpreemptive kernels. A preemptive kernel allows a process to be preempted while it is running in kernel mode. A nonpreemptive kernel does not allow a process running in kernel mode to be preempted; a kernel-mode process will run until it exits kernel mode, blocks, or voluntarily yields control of the CPU. A nonpreemptive kernel is essentially free from race conditions on kernel data structures, as the contents of this register will be saved and restored by the interrupt handler.\
Feedback: 6.2\
Difficulty: Medium\
\
\
\
27.  Write two short methods that implement the simple semaphore 
\f1 wait()
\f0  and 
\f1 signal()
\f0  operations on global variable 
\f1\fs20 S
\f0\fs24 .\
\
Ans:  
\f1 wait (S) \{
\f0 \
\pard\pardeftab720\ri0\sl276\slmult1\sa200\partightenfactor0

\f1 \cf0   while (S <= 0);\
  S--;\
\}\
\
signal (S) \{\
  S++;\
\}\
\pard\pardeftab720\ri0\partightenfactor0

\f0 \cf0 Feedback: 6.6\
Difficulty: Difficult\
\
\
\
28.  Explain the difference between the first readers\'96writers problem and the second readers\'96-writers problem.\
\
Ans:  The first readers\'96writers problem requires that no reader will be kept waiting unless a writer has already obtained permission to use the shared database; whereas the second readers\'96writers problem requires that once a writer is ready, that writer performs its write as soon as possible.\
Feedback: 6.7.2\
Difficulty: Medium\
\
\
\
29.  Describe the dining-philosophers problem and how it relates to operating systems.\
\
Ans:  The scenario involves five philosophers sitting at a round table with a bowl of food and five chopsticks. Each chopstick sits between two adjacent philosophers. The philosophers are allowed to think and eat. Since two chopsticks are required for each philosopher to eat, and only five chopsticks exist at the table, no two adjacent philosophers may be eating at the same time. A scheduling problem arises as to who gets to eat at what time. This problem is similar to the problem of scheduling processes that require a limited number of resources.\
Feedback: 6.7.3\
Difficulty: Medium\
\
\
\
30.  What is the difference between software transactional memory and hardware transactional memory?\
\
Ans: Software transactional memory (STM) implements transactional memory entirely in software, no special hardware is required. STM works by inserting instrumentation code inside of transaction blocks and typically requires the support of  a compiler. Hardware transactional memory (HTM) implements transactional memory entirely in hardware using cache hierarchies and cache coherency protocols to resolve conflicts when shared data resides in separate caches.\
Feedback: 6.10.1\
Difficulty: Difficult\
\
\
\
31.  Assume you had a function named update() that updates shared data. Illustrate how a mutex lock named mutex might be used to prevent a race condition in update().\
\
Ans:\
\pard\pardeftab720\ri0\partightenfactor0

\f1 \cf0 void update()\
\{\
	mutex.acquire();\
\
	// update shared data\
\
	mutex.release();\
\}
\f0 \
Feedback: 6.5\
Difficulty: Easy\
\
\
\
32.  Describe the turnstile structure used by Solaris for synchronization.\
\
Ans:  Solaris uses turnstiles to order the list of threads waiting to acquire either an adaptive mutex or a reader\'96writer lock. The turnstile is a queue structure containing threads blocked on a lock. Each synchronized object with at least one thread blocked on the object's lock requires a separate turnstile. However, rather than associating a turnstile with each synchronized object, Solaris gives each kernel thread its own turnstile.\
Feedback: 6.9.3\
Difficulty: Difficult\
\
\
\
33.  Explain the role of the variable 
\f1 preempt_count
\f0  in the Linux kernel.\
\
Ans: Each task maintains a value 
\f1 preempt_count 
\f0 which is the number of locks held by each task. When a lock is acquired, 
\f1 preempt_count 
\f0 is incremented. When a lock is released, \

\f1 preempt_count 
\f0 is decremented. If the task currently running in the kernel has a value of \
 
\f1 preempt_count 
\f0 > 0, the kernel cannot be preempted as the task currently holds a lock.\
If the count is zero, the kernel can be preempted.
\f1 \
\pard\pardeftab720\ri0\partightenfactor0

\f0 \cf0 Feedback: 6.9.2\
Difficulty: Difficult\
\
\
\
34. Describe how an adaptive mutex functions.\
\
Ans: An adaptive mutex is used in the Solaris operating system to protect access to shared data. On a multiprocessor system, an adaptive mutex acts as a standard semaphore implemented as a spinlock. If the shared data being accessed is already locked and the thread holding that lock is running on another CPU, the thread spins while waiting for the lock to be released, and the data to become available. If the thread holding the lock is not in the run state, the waiting thread sleeps until the lock becomes available. On a single processor system, spinlocks are not used and the waiting thread always sleeps until the lock becomes available.\
Feedback: 6.9.3\
Difficulty: Difficult\
\
\
\
35. Describe a scenario when using a reader\'96writer lock is more appropriate than another synchronization tool such as a semaphore.\
\
Ans: A tool such as a semaphore only allows one process to access shared data at a time. Reader\'96writer locks are useful when it is easy to distinguish if a process is only reading or reading/writing shared data. If a process is only reading shared data, it can access the shared data concurrently with other readers. In the case when there are several readers, a reader\'96writer lock may be much more efficient.\
Feedback: 6.7.2\
Difficulty: Medium\
\
\
\
36. Explain how Linux manages race conditions on single-processor systems such as embedded devices.\
\
Ans: On multiprocessor machines, Linux uses spin locks to manage race conditions. However, as spin locks are not appropriate on single processor machines, Linux instead disables kernel preemption which acquiring a spin lock, and enables it after releasing the spin lock.\
Feedback: 6.9.2\
Difficulty: Medium\
\
\
True/False\
\
\
\
37.  Race conditions are prevented by requiring that critical regions be protected by locks.\
\
Ans:  True\
Feedback: 6.4\
Difficulty: Medium\
\
\
\
38.  The value of a counting semaphore can range only between 0 and 1.\
\
Ans:  False\
Feedback: 6.6\
Difficulty: Easy\
\
\
\
39.  A deadlock-free solution eliminates the possibility of starvation.\
\
Ans:  False\
Feedback: 6.6.3\
Difficulty: Medium\
\
\
\
40.  The local variables of a monitor can be accessed by only the local procedures.\
\
Ans:  True\
Feedback: 6.8\
Difficulty: Medium\
\
\
\
41.  Every object in Java has associated with it a single lock.\
\
Ans:  True\
Feedback: 6.8\
Difficulty: Medium\
\
\
\
42. Monitors are a theoretical concept and are not practiced in modern programming languages\
\
Ans: False\
Feedback: 6.8\
Difficulty: Easy\
\
\
\
43. A thread will immediately acquire a dispatcher lock that is the signaled state.\
\
Ans: True\
Feedback: 6.9.1\
Difficulty: Easy\
\
\
\
44. Mutex locks and counting semaphores are essentially the same thing.\
\
Ans: False\
Feedback: 6.6\
Difficulty: Easy\
\
\
\
45. Mutex locks and binary semaphores are essentially the same thing.\
\
Ans: True\
Feedback: 6.6\
Difficulty: Easy \
\
\
\
46. A nonpreemptive kernel is safe from race conditions on kernel data structures.\
\
Ans: True\
Feedback: 6.2\
Difficulty: Medium\
\
\
\
47. Linux mostly uses atomic integers to manage race conditions within the kernel.\
\
Ans: False\
Feedback: 6.9.2\
Difficulty: Medium\
\
25.
\f2 \uc0\u20026 \'a4\'46\'b8\'d1\u20915 \u20020 \'ac\'c9\u21306 \u38382 \u39064 \'a1\'41\'a5\'b2\u39035 \u28385 \'a8\'ac\'ad\'fe\'a4\'54\u20010 \u26465 \'a5\'f3\'a1\'48
\f0 \
\
Ans
\f2 \'a1\'47\'a6\'62\uc0\u20851 \u38190 \'b3\'a1\'a4\'c0\u38382 \u39064 \'aa\'ba\'b8\'d1\u20915 \'a4\'e8\'ae\'d7\'a4\'a4\'a1\'41\'a6\'70\'aa\'47\u32447 \'b5\'7b\u24403 \'ab\'65\'a5\'bf\'a6\'62\'a8\'e4\u20851 \u38190 \'b3\'a1\'a4\'c0\u25191 \'a6\'e6\'a1\'41\u21017 \'a8\'e4\u20851 \u38190 \'b3\'a1\'a4\'c0\'a4\'a4\'a4\'a3\u20250 \u25191 \'a6\'e6\'a5\'f4\'a6\'f3\u32447 \'b5\'7b\'a1\'43\'a6\'b9\'a5\'7e\'a1\'41\'a5\'75\'a6\'b3\'a8\'ba\'a8\'c7\'a5\'bc\'a6\'62\'a8\'e4\u20851 \u38190 \'b3\'a1\'a4\'c0\u25191 \'a6\'e6\'aa\'ba\u32447 \'b5\'7b\'a4\'7e\'af\'e0\u21442 \'c9\'4f\u20915 \'a9\'77\'a4\'55\'a4\'40\u20010 \u36827 \'a4\'4a\'a8\'e4\u20851 \u38190 \'b3\'a1\'a4\'c0\'aa\'ba\u36827 \'b5\'7b\'a1\'43\'b3\'cc\'a6\'5a\'a1\'41\'a6\'62\u32447 \'b5\'7b\u21457 \'a5\'58\u36827 \'a4\'4a\'a8\'e4\u20020 \'ac\'c9\u29366 \u24577 \'aa\'ba\u35831 \'a8\'44\'a6\'5a\'a1\'41\'a8\'e4\'a5\'4c\u32447 \'b5\'7b\'b3\'51\'a4\'b9\u35768 \u36827 \'a4\'4a\'a8\'e4\u20020 \'ac\'c9\u29366 \u24577 \'aa\'ba\'a6\'b8\u25968 \'a5\'b2\u39035 \'a6\'73\'a6\'62\'a4\'40\u20010 \'ad\'ad\'a8\'ee\'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.2\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a4\'a4\'b5\'a5
\f0 \
\
\
\
26.
\f2 \'b8\'d1\uc0\u37322 \u22788 \'b2\'7a\'be\'de\'a7\'40\'a8\'74\u32479 \'a4\'a4\u20851 \u38190 \'b3\'a1\'a4\'c0\'aa\'ba\u20004 \'cf\'fa\'b3\'71\'a5\'ce\'a4\'e8\'aa\'6b\'a1\'43
\f0 \
\
Ans
\f2 \'a1\'47\uc0\u20851 \u38190 \'b3\'a1\'a4\'c0\'a5\'69\'af\'e0\'a8\'cf\'a5\'ce\u25250 \'a5\'65\'a6\'a1\'a9\'ce\'ab\'44\u25250 \'a5\'65\'a6\'a1\u20869 \'ae\'d6\'a1\'43\u25250 \'a5\'65\'a6\'a1\u20869 \'ae\'d6\'a4\'b9\u35768 \u36827 \'b5\'7b\'a6\'62\u20869 \'ae\'d6\'bc\'d2\'a6\'a1\'a4\'55\u36816 \'a6\'e6\u26102 \'b3\'51\u25250 \'a5\'65\'a1\'43\'ab\'44\u25250 \'a5\'65\'a6\'a1\u20869 \'ae\'d6\'a4\'a3\'a4\'b9\u35768 \u25250 \'a5\'65\'a6\'62\u20869 \'ae\'d6\'bc\'d2\'a6\'a1\'a4\'55\u36816 \'a6\'e6\'aa\'ba\u36827 \'b5\'7b
\f0 ;
\f2 \uc0\u20869 \'ae\'d6\'bc\'d2\'a6\'a1\u36827 \'b5\'7b\u23558 \'a4\'40\'aa\'bd\u36816 \'a6\'e6\'a1\'41\'aa\'bd\'a8\'ec\'a5\'a6\'b0\'68\'a5\'58\u20869 \'ae\'d6\'bc\'d2\'a6\'a1\'a1\'41\'aa\'fd\'b6\'eb\'a9\'ce\'a6\'db\u21160 \u20135 \'a5\'cd\u23545 
\f0 CPU
\f2 \'aa\'ba\'b1\'b1\'a8\'ee\'a1\'43\'ab\'44\uc0\u25250 \'a5\'65\'a6\'a1\u20869 \'ae\'d6\'b0\'f2\'a5\'bb\'a4\'57\'a4\'a3\'a8\'fc\u20869 \'ae\'d6\u25968 \'d5\'75\u32467 \'cc\'db\'a4\'57\'aa\'ba\u31454 \u20105 \u26465 \'a5\'f3\'aa\'ba\'bc\'76\u21709 \'a1\'41\'a6\'5d\u20026 \u35813 \'b1\'48\'a6\'73\'be\'b9\'aa\'ba\u20869 \'ae\'65\u23558 \'a5\'d1\'a4\'a4\u26029 \u22788 \'b2\'7a\'b5\'7b\'a7\'c7\'ab\'4f\'a6\'73\'a9\'4d\'ab\'ec\'ce\'60\'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.2\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a4\'a4\'b5\'a5
\f0 \
\
\
\
27.
\f2 \uc0\u32534 \u20889 \u20004 \u20010 \u31616 \'b5\'75\'aa\'ba\'a4\'e8\'aa\'6b\'a1\'41\'a6\'62\'a5\'fe\'a7\'bd\u21464 \'b6\'71
\f0 S
\f2 \'a4\'57\uc0\u23454 \u29616 \u31616 \u21333 \'aa\'ba\'ab\'48\u21495 \'b6\'71
\f0 wait
\f2 \'a1\'5d\'a1\'5e\'a9\'4d
\f0 signal
\f2 \'a1\'5d\'a1\'5e\'be\'de\'a7\'40\'a1\'43
\f0 \
\

\f2 \'b5\'aa\'a1\'47\'b5\'a5\'ab\'dd\'a1\'5d
\f0 S
\f2 \'a1\'5e
\f0 \{\
\'a0\'a0
\f2 \'a6\'d3\'a1\'5d
\f0 S <= 0
\f2 \'a1\'5e
\f0 ;\
\'a0\'a0S--;\
\}\
\
signal
\f2 \'a1\'5d
\f0 S
\f2 \'a1\'5e
\f0 \{\
\'a0\'a0
\f2 \'a4\'70\uc0\u21495 
\f0 ++;\
\}\

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.6\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a7\'78\u38590 
\f0 \
\
\
\
28.
\f2 \'b8\'d1\uc0\u37322 \'b2\'c4\'a4\'40\u20010 \u35835 \'aa\'cc
\f0  - 
\f2 \'a7\'40\'ae\'61\uc0\u38382 \u39064 \'a9\'4d\'b2\'c4\'a4\'47\u20010 \u35835 \'aa\'cc
\f0  - 
\f2 \'a7\'40\'ae\'61\uc0\u38382 \u39064 \'a4\'a7\u38388 \'aa\'ba\u21306 \u21035 \'a1\'43
\f0 \
\
Ans
\f2 \'a1\'47\'b2\'c4\'a4\'40\uc0\u20010 \u35835 \'aa\'cc
\f0  - 
\f2 \uc0\u32534 \u20889 \'aa\'cc\u38382 \u39064 \'ad\'6e\'a8\'44\'b0\'a3\'ab\'44\'a7\'40\'aa\'cc\'a4\'77\u32463 \u33719 \'b1\'6f\'a8\'cf\'a5\'ce\'a6\'40\'a8\'c9\u25968 \'d5\'75\u24211 \'aa\'ba\u35768 \'a5\'69\'a1\'41\'a7\'5f\u21017 \'a4\'a3\u20250 \'a6\'b3\'a5\'f4\'a6\'f3\u35835 \'aa\'cc\'b5\'a5\'ab\'dd
\f0 ;
\f2 \'a6\'d3\'b2\'c4\'a4\'47\uc0\u20010 \u35835 \'aa\'cc
\f0  - 
\f2 \uc0\u32534 \u20889 \'aa\'cc\u38382 \u39064 \'ad\'6e\'a8\'44\'a4\'40\'a5\'b9\'a7\'40\'ae\'61\'ad\'e3\u22791 \'a6\'6e\'a1\'41\u35813 \'a7\'40\'aa\'cc\'b4\'4e\u20250 \u23613 \'a7\'d6\u25191 \'a6\'e6\'a8\'e4\u20889 \'a7\'40\'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.7.2\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a4\'a4\'b5\'a5
\f0 \
\
\
\
29.
\f2 \'b4\'79\'ad\'7a\'c0\'5c\uc0\u39278 \'ad\'f5\u23398 \'ae\'61\'aa\'ba\u38382 \u39064 \'a4\'ce\'a8\'e4\'c9\'4f\'be\'de\'a7\'40\'a8\'74\u32479 \'aa\'ba\u20851 \'a8\'74\'a1\'43
\f0 \
\

\f2 \'b5\'aa\'a1\'47\'b1\'a1\'b4\'ba\'af\'41\'a4\'ce\'a4\'ad\'a6\'ec\'ad\'f5\uc0\u23398 \'ae\'61\'a7\'a4\'a6\'62\u22278 \'ae\'e0\'ae\'c7\'a1\'41\'a4\'40\'b8\'4a\'ad\'b9\'aa\'ab\'a9\'4d\'a4\'ad\'ae\'da\'b8\'5f\'a4\'6c\'a1\'43\'a8\'43\'ae\'da\'b8\'5f\'a4\'6c\'a6\'ec\'a4\'5f\u20004 \u20010 \'ac\'db\u37051 \'aa\'ba\'ad\'f5\u23398 \'ae\'61\'a4\'a7\u38388 \'a1\'43\'a4\'b9\u35768 \'ad\'f5\u23398 \'ae\'61\'ab\'e4\'a6\'d2\'a9\'4d\'a6\'59\u39277 \'a1\'43\'a5\'d1\'a4\'5f\'a8\'43\u20010 \'ad\'f5\u23398 \'ae\'61\'b3\'a3\'bb\'dd\'ad\'6e\u20004 \'ae\'da\'b8\'5f\'a4\'6c\'a6\'59\'a1\'41\'ae\'e0\'a4\'6c\'a4\'57\'a5\'75\'a6\'b3\'a4\'ad\'ae\'da\'b8\'5f\'a4\'6c\'a1\'41\'a9\'d2\'a5\'48\u27809 \'a6\'b3\u20004 \u20010 \'ac\'db\u37051 \'aa\'ba\'ad\'f5\u23398 \'ae\'61\'a6\'50\u26102 \u36827 \'ad\'b9\'a1\'43\'a5\'58\u29616 \'a4\'46\'a4\'40\u20010 \u35843 \'ab\'d7\u38382 \u39064 \'a1\'41\'a7\'59\u35841 \'a6\'62\'a4\'b0\'a4\'5c\u26102 \u38388 \'a6\'59\u39277 \'a1\'43\'a6\'b9\u38382 \u39064 \u31867 \'a6\'fc\'a4\'5f\'bb\'dd\'ad\'6e\'a6\'b3\'ad\'ad\u25968 \'b6\'71\u36164 \'b7\'bd\'aa\'ba\u35843 \'ab\'d7\u36827 \'b5\'7b\'aa\'ba\u38382 \u39064 \'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.7.3\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a4\'a4\'b5\'a5
\f0 \
\
\
\
30.
\f2 \uc0\u36719 \'a5\'f3\'a8\'c6\u21153 \u20869 \'a6\'73\'a9\'4d\'b5\'77\'a5\'f3\'a8\'c6\u21153 \u20869 \'a6\'73\'a6\'b3\'a4\'b0\'a4\'5c\u21306 \u21035 \'a1\'48
\f0 \
\
Ans
\f2 \'a1\'47\uc0\u36719 \'a5\'f3\'a8\'c6\u21153 \'a6\'73\u20648 \'be\'b9\'a1\'5d
\f0 STM
\f2 \'a1\'5e\'a7\'b9\'a5\'fe\'a5\'ce\uc0\u36719 \'a5\'f3\u23454 \u29616 \'a8\'c6\u21153 \'a6\'73\u20648 \'be\'b9\'a1\'41\'a4\'a3\'bb\'dd\'ad\'6e\'af\'53\'ae\'ed\'aa\'ba\'b5\'77\'a5\'f3\'a1\'43
\f0  STM
\f2 \'b3\'71\uc0\u36807 \'a6\'62\'a8\'c6\u21153 \u22359 \u20869 \'b4\'a1\'a4\'4a\u26816 \u27979 \'a5\'4e\u30721 \u26469 \'a4\'75\'a7\'40\'a1\'41\'a6\'7d\'a5\'42\'b3\'71\'b1\'60\'bb\'dd\'ad\'6e\u32534 \u35793 \'be\'b9\'aa\'ba\'a4\'e4\'ab\'f9\'a1\'43\'b5\'77\'a5\'f3\'a8\'c6\u21153 \'a6\'73\u20648 \'be\'b9\'a1\'5d
\f0 HTM
\f2 \'a1\'5e\'a8\'cf\'a5\'ce\'b0\'aa\'b3\'74\uc0\u32531 \'a6\'73\u23618 \'a6\'b8\u32467 \'cc\'db\'a9\'4d\'b0\'aa\'b3\'74\u32531 \'a6\'73\'a4\'40\'ad\'50\'a9\'ca\u21327 \u35758 \'a7\'b9\'a5\'fe\'a6\'62\'b5\'77\'a5\'f3\'a4\'a4\u23454 \u29616 \'a8\'c6\u21153 \'a6\'73\u20648 \'be\'b9\'a1\'41\'a5\'48\'a6\'62\'a6\'40\'a8\'c9\u25968 \'d5\'75\u39547 \'af\'64\'a6\'62\u21333 \u29420 \'aa\'ba\'b0\'aa\'b3\'74\u32531 \'a6\'73\'a4\'a4\u26102 \'b8\'d1\u20915 \u20914 \'ac\'f0\'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.10.1\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a7\'78\u38590 
\f0 \
\
\
\
31.
\f2 \'b0\'b2\uc0\u35774 \'b1\'7a\'a6\'b3\'a4\'40\u20010 \'a6\'57\u20026 
\f0 update
\f2 \'a1\'5d\'a1\'5e\'aa\'ba\'a8\'e7\uc0\u25968 \u26469 \'a7\'f3\'b7\'73\'a6\'40\'a8\'c9\u25968 \'d5\'75\'a1\'43\u35828 \'a9\'fa\'a6\'70\'a6\'f3\'a8\'cf\'a5\'ce\'a6\'57\u20026 
\f0 mutex
\f2 \'aa\'ba\'a4\'ac\'a5\'b8\uc0\u38145 \u26469 \'a8\'be\'a4\'ee
\f0 update
\f2 \'a1\'5d\'a1\'5e\'a4\'a4\'aa\'ba\uc0\u31454 \u20105 \u26465 \'a5\'f3\'a1\'43
\f0 \
\

\f2 \'b5\'aa\'a1\'47
\f0 \
void update
\f2 \'a1\'5d\'a1\'5e
\f0 \
\{\
mutex.acquire
\f2 \'a1\'5d\'a1\'5e
\f0 ;\
\
//
\f2 \'a7\'f3\'b7\'73\'a6\'40\'a8\'c9\uc0\u25968 \'d5\'75
\f0 \
\
mutex.release
\f2 \'a1\'5d\'a1\'5e
\f0 ;\
\}\

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.5\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'ae\'65\'a9\'f6
\f0 \
\
\
\
32.
\f2 \'b4\'79\'ad\'7a
\f0 Solaris
\f2 \'a5\'ce\'a4\'5f\'a6\'50\'a8\'42\'aa\'ba\'a4\'51\'a6\'72\uc0\u36716 \u38376 \u32467 \'cc\'db\'a1\'43
\f0 \
\
Ans
\f2 \'a1\'47
\f0 Solaris
\f2 \'a8\'cf\'a5\'ce\'a4\'51\'a6\'72\uc0\u36716 \u38376 \u26469 \'a9\'52\'a5\'4f\'b5\'a5\'ab\'dd\u33719 \'a8\'fa\'a6\'db\'d3\'ec\u24212 \'a4\'ac\'a5\'b8\u38145 \'a9\'ce\u35835 \u20889 \'be\'b9\u38145 \'aa\'ba\u32447 \'b5\'7b\'a6\'43\'aa\'ed\'a1\'43\'a4\'51\'a6\'72\u36716 \u38376 \'ac\'4f\'a4\'40\u20010 \u38431 \'a6\'43\u32467 \'cc\'db\'a1\'41\'a5\'5d\'a7\'74\u38145 \'a6\'62\u38145 \'a4\'57\'aa\'ba\u32447 \'b5\'7b\'a1\'43\'a8\'43\u20010 \'a6\'50\'a8\'42\u23545 \'b6\'48\'a6\'62\u23545 \'b6\'48\'aa\'ba\u38145 \'a4\'57\'a6\'dc\'a4\'d6\'a6\'b3\'a4\'40\u20010 \u32447 \'b5\'7b\'bb\'dd\'ad\'6e\'a4\'40\u20010 \u21333 \u29420 \'aa\'ba\'b1\'db\u36716 \u38376 \'a1\'43\'a6\'fd\'ac\'4f\'a1\'41
\f0 Solaris
\f2 \'a4\'a3\'ac\'4f\uc0\u23558 \'b1\'db\u36716 \u38376 \'c9\'4f\'a8\'43\u20010 \'a6\'50\'a8\'42\u23545 \'b6\'48\'ac\'db\u20851 \u32852 \'a1\'41\'a6\'d3\'ac\'4f\u20026 \'a8\'43\u20010 \u20869 \'ae\'d6\u32447 \'b5\'7b\'b4\'a3\'a8\'d1\'a6\'db\'a4\'76\'aa\'ba\'b1\'db\u36716 \u38376 \'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.9.3\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a7\'78\u38590 
\f0 \
\
\
\
33.
\f2 \'b8\'d1\uc0\u37322 \u21464 \'b6\'71
\f0 preempt_count
\f2 \'a6\'62
\f0 Linux
\f2 \uc0\u20869 \'ae\'d6\'a4\'a4\'aa\'ba\'a7\'40\'a5\'ce\'a1\'43
\f0 \
\
Ans
\f2 \'a1\'47\'a8\'43\uc0\u20010 \'a5\'f4\u21153 \'b3\'a3\u32500 \u25252 \'a4\'40\u20010 \'ad\'c8
\f0 preempt_count
\f2 \'a1\'41\'a5\'a6\'ac\'4f\'a8\'43\uc0\u20010 \'a5\'f4\u21153 \'ab\'f9\'a6\'b3\'aa\'ba\u38145 \u25968 \'a1\'43\u33719 \'a8\'fa\u38145 \'a9\'77\'a6\'5a\'a1\'41
\f0 preempt_count
\f2 \uc0\u20250 \u36882 \'bc\'57\'a1\'43\u24403 \u38145 \'b3\'51\u37322 \'a9\'f1\u26102 
\f0 \
preempt_count
\f2 \uc0\u36882 \u20943 \'a1\'43\'a6\'70\'aa\'47\u24403 \'ab\'65\'a6\'62\u20869 \'ae\'d6\'a4\'a4\u36816 \'a6\'e6\'aa\'ba\'a5\'f4\u21153 \'aa\'ba\'ad\'c8\u20026 
\f0 \
\'a0preempt_count> 0
\f2 \'a1\'41\uc0\u20869 \'ae\'d6\u26080 \'aa\'6b\u25250 \'a5\'65\'a1\'41\'a6\'5d\u20026 \'a5\'f4\u21153 \u24403 \'ab\'65\'ab\'f9\'a6\'b3\u38145 \'a1\'43
\f0 \

\f2 \'a6\'70\'aa\'47\uc0\u35745 \u25968 \u20026 \'b9\'73\'a1\'41\u21017 \'a5\'69\'a5\'48\u25250 \'a5\'65\u20869 \'ae\'d6\'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.9.2\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a7\'78\u38590 
\f0 \
\
34.
\f2 \'b4\'79\'ad\'7a\'a6\'db\'d3\'ec\uc0\u24212 \'a4\'ac\'a5\'b8\'ca\'5e\'aa\'ba\'a5\'5c\'af\'e0\'a1\'43
\f0 \
\
Ans
\f2 \'a1\'47
\f0 Solaris
\f2 \'be\'de\'a7\'40\'a8\'74\uc0\u32479 \'a4\'a4\'a8\'cf\'a5\'ce\'a6\'db\'d3\'ec\u24212 \'a4\'ac\'a5\'b8\u38145 \u26469 \'ab\'4f\u25252 \u23545 \'a6\'40\'a8\'c9\u25968 \'d5\'75\'aa\'ba\u35775 \u38382 \'a1\'43\'a6\'62\'a6\'68\u22788 \'b2\'7a\'be\'b9\'a8\'74\u32479 \'a4\'57\'a1\'41\'a6\'db\'d3\'ec\u24212 \'a4\'ac\'a5\'b8\'ca\'5e\'a5\'52\u24403 \u23454 \u29616 \u20026 \'a6\'db\'b1\'db\u38145 \'aa\'ba\u26631 \'ad\'e3\'ab\'48\u21495 \'b6\'71\'a1\'43\'a6\'70\'aa\'47\'a5\'bf\'a6\'62\u35775 \u38382 \'aa\'ba\'a6\'40\'a8\'c9\u25968 \'d5\'75\'a4\'77\'b3\'51\u38145 \'a9\'77\'a1\'41\'a6\'7d\'a5\'42\'ab\'f9\'a6\'b3\u35813 \u38145 \'aa\'ba\u32447 \'b5\'7b\'a5\'bf\'a6\'62\'a5\'74\'a4\'40\u20010 
\f0 CPU
\f2 \'a4\'57\uc0\u36816 \'a6\'e6\'a1\'41\u21017 \u32447 \'b5\'7b\'a6\'62\'b5\'a5\'ab\'dd\u37322 \'a9\'f1\u38145 \'a9\'77\u26102 \'b1\'db\u36716 \'a1\'41\'a6\'7d\'a5\'42\u25968 \'d5\'75\u21464 \u20026 \'a5\'69\'a5\'ce\'a1\'43\'a6\'70\'aa\'47\'ab\'f9\'a6\'b3\u38145 \'aa\'ba\u32447 \'b5\'7b\'a5\'bc\u22788 \'a4\'5f\u36816 \'a6\'e6\u29366 \u24577 \'a1\'41\u21017 \'b5\'a5\'ab\'dd\u32447 \'b5\'7b\u23558 \'a5\'f0\'af\'76\'a1\'41\'aa\'bd\'a8\'ec\u38145 \u21464 \u20026 \'a5\'69\'a5\'ce\'a1\'43\'a6\'62\u21333 \u22788 \'b2\'7a\'be\'b9\'a8\'74\u32479 \'a4\'57\'a1\'41\'a4\'a3\'a8\'cf\'a5\'ce\'a6\'db\'b1\'db\u38145 \'a1\'41\'b5\'a5\'ab\'dd\u32447 \'b5\'7b\'a9\'6c\u32456 \u22788 \'a4\'5f\'a5\'f0\'af\'76\u29366 \u24577 \'a1\'41\'aa\'bd\'a8\'ec\u38145 \u21464 \u20026 \'a5\'69\'a5\'ce\'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.9.3\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a7\'78\u38590 
\f0 \
\
\
\
35.
\f2 \'b4\'79\'ad\'7a\'a8\'cf\'a5\'ce\uc0\u35835 \u20889 \'be\'b9\u38145 \'a9\'77\'a4\'f1\'a8\'e4\'a5\'4c\'a6\'50\'a8\'42\'a4\'75\'a8\'e3\'a1\'5d\'a6\'70\'ab\'48\u21495 \'b6\'71\'a1\'5e\'a7\'f3\'a6\'58\'d3\'ec\'aa\'ba\u22330 \'b4\'ba\'a1\'43
\f0 \
\
Ans
\f2 \'a1\'47\uc0\u35832 \'a6\'70\'ab\'48\u21495 \'b6\'71\'a4\'a7\u31867 \'aa\'ba\'a4\'75\'a8\'e3\'a5\'75\'a4\'b9\u35768 \'a4\'40\u20010 \u36827 \'b5\'7b\'a4\'40\'a6\'b8\u35775 \u38382 \'a6\'40\'a8\'c9\u25968 \'d5\'75\'a1\'43\'a6\'70\'aa\'47\u36827 \'b5\'7b\'a5\'75\'ac\'4f\u35835 \'a8\'fa\'a9\'ce\u35835 \'a8\'fa
\f0 /
\f2 \uc0\u20889 \'a4\'4a\'a6\'40\'a8\'c9\u25968 \'d5\'75\'a1\'41\u21017 \'ab\'dc\'ae\'65\'a9\'f6\u21306 \'a4\'c0\u35835 \u20889 \'be\'b9\u38145 \'a1\'43\'a6\'70\'aa\'47\u36827 \'b5\'7b\u20165 \u35835 \'a8\'fa\'a6\'40\'a8\'c9\u25968 \'d5\'75\'a1\'41\u21017 \'a5\'a6\'a5\'69\'a5\'48\'c9\'4f\'a8\'e4\'a5\'4c\u35835 \'a8\'fa\'be\'b9\'a6\'50\u26102 \u35775 \u38382 \'a6\'40\'a8\'c9\u25968 \'d5\'75\'a1\'43\'a6\'62\'a6\'73\'a6\'62\'a6\'68\u20010 \u35835 \'a8\'fa\'be\'b9\'aa\'ba\'b1\'a1\u20917 \'a4\'55\'a1\'41\u35835 \u20889 \'be\'b9\u38145 \'a5\'69\'af\'e0\'a7\'f3\'a6\'b3\'ae\'c4\'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.7.2\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a4\'a4\'b5\'a5
\f0 \
\
\
\
36.
\f2 \'b8\'d1\uc0\u37322 
\f0 Linux
\f2 \'a6\'70\'a6\'f3\'ba\'de\'b2\'7a\'b4\'4f\'a4\'4a\'a6\'a1\uc0\u35774 \u22791 \'b5\'a5\u21333 \u22788 \'b2\'7a\'be\'b9\'a8\'74\u32479 \'aa\'ba\u31454 \u20105 \u26465 \'a5\'f3\'a1\'43
\f0 \
\
Ans
\f2 \'a1\'47\'a6\'62\'a6\'68\uc0\u22788 \'b2\'7a\'be\'b9\'c9\'f3\'be\'b9\'a4\'57\'a1\'41
\f0 Linux
\f2 \'a8\'cf\'a5\'ce\'a6\'db\'b1\'db\uc0\u38145 \u26469 \'ba\'de\'b2\'7a\u31454 \u20105 \u26465 \'a5\'f3\'a1\'43\'a6\'fd\'ac\'4f\'a1\'41\'a5\'d1\'a4\'5f\'a6\'db\'b1\'db\u38145 \'a4\'a3\'d3\'ec\'a5\'ce\'a4\'5f\u21333 \u22788 \'b2\'7a\'be\'b9\u35745 \'ba\'e2\'c9\'f3\'a1\'41\'a6\'5d\'a6\'b9
\f0 Linux
\f2 \uc0\u20250 \'b8\'54\'a5\'ce\u33719 \'a8\'fa\'a6\'db\'b1\'db\u38145 \'aa\'ba\u20869 \'ae\'d6\u25250 \'a5\'65\'a1\'41\'a6\'7d\'a6\'62\u37322 \'a9\'f1\'a6\'db\'b1\'db\u38145 \'a6\'5a\u21551 \'a5\'ce\'a5\'a6\'a1\'43
\f0 \

\f2 \'a4\'cf\uc0\u39304 \'a1\'47
\f0 6.9.2\

\f2 \uc0\u38590 \'ab\'d7\'a1\'47\'a4\'a4\'b5\'a5
\f0 \
\
}